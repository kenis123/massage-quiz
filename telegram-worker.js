addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request))
})

async function handleRequest(request) {
  // –î–æ–∑–≤–æ–ª—è—î–º–æ —Ç—ñ–ª—å–∫–∏ POST –∑–∞–ø–∏—Ç–∏
  if (request.method !== 'POST') {
    return new Response('Method not allowed', { status: 405 })
  }

  try {
    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ –∑–∞–ø–∏—Ç—É
    const data = await request.json()
    
    // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω–∏ –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    const botToken = TELEGRAM_BOT_TOKEN
    const chatId = TELEGRAM_CHAT_ID
    
    if (!botToken || !chatId) {
      return new Response('Telegram tokens not configured', { status: 500 })
    }

    // –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    const message = `
üÜï –ù–æ–≤–∏–π –ª—ñ–¥ –∑ –∫–≤—ñ–∑—É –º–∞—Å–∞–∂—É!

üë§ –Ü–º'—è: ${data.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}

üíÜ‚Äç‚ôÄÔ∏è –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏–π –º–∞—Å–∞–∂: ${data.massage}
‚è± –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: ${data.duration}
üí∞ –¶—ñ–Ω–∞: ${data.oldPrice} ‚Üí ${data.newPrice}

üìä –í—ñ–¥–ø–æ–≤—ñ–¥—ñ –∫–ª—ñ—î–Ω—Ç–∞:
‚Ä¢ –í—ñ–∫: ${data.answers.question1}
‚Ä¢ –î–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç: ${data.answers.question2}
‚Ä¢ –ú–µ—Ç–∞: ${data.answers.question3}
‚Ä¢ –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: ${data.answers.question4}

‚è∞ ${new Date().toLocaleString('uk-UA')}
    `

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ Telegram
    const telegramResponse = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'HTML'
      })
    })

    if (!telegramResponse.ok) {
      throw new Error('Telegram API error')
    }

    return new Response(JSON.stringify({ success: true }), {
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'POST',
        'Access-Control-Allow-Headers': 'Content-Type'
      }
    })

  } catch (error) {
    return new Response(JSON.stringify({ 
      success: false, 
      error: error.message 
    }), {
      status: 500,
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'POST',
        'Access-Control-Allow-Headers': 'Content-Type'
      }
    })
  }
}
